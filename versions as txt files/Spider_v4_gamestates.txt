 rem SPIDER GAME

init
 rem STORING FOREGROUND AND BACKGROUND COLORS
 COLUPF = 4
 COLUBK = 8

 rem INITIAL playfield IS THE TITLE SCREEN
 playfield:
  XX...XXXXXXXXXXXXXXXXXXXXXX...XX
  X..............................X
  ...XXX..XXX..XXX.XX...XXX.XX....
  ..X...X.X..X..X..X.X..X...X.X...
  ..X.....X..X..X..X..X.X...X..X..
  ...XXX..X..X..X..X..X.XX..X.X...
  ......X.XXX...X..X..X.X...XX....
  ..X...X.X.....X..X.X..X...X.X...
  ...XXX..X....XXX.XX...XXX.X..X..
  X..............................X
  XX...XXXXXXXXXXXXXXXXXXXXXX...XX
  ................................
end

 rem SPIDER SPRITE
 player0:
 %10100101
 %10100101
 %01011010
 %00111100
 %00100100
 %01011010
 %11000011
end

 rem HUMAN SPRITE
 player1:
 %01100110
 %00100100
 %00011000
 %00011000
 %01111110
 %01001010
 %10011010
end

 rem STARTING POSITIONS
 rem x,y --> SPIDER
 x = 0 : y = 0
 rem v,z --> HUMAN
 v = 254 : z = 254
 rem VARIABLES USED to STORE DIRECTIONAL INPUTS for collision DETECTION
 rem a --> left
 rem d --> right
 rem s --> down
 rem w --> up
 a = 0 : d = 0 : s = 0 : w = 0

 rem INITALIZE SCORE
 score = 0

 rem GAME STATES
 rem 0 --> title screen
 rem 1 --> level 1
 c = 0

 rem STORES WHETHER BUTTON HAS BEEN PRESSED BY PLAYER
 g = 0

 rem INITIALIZE BALL
 ballx = 0 : bally = 0
 rem THIS MANIPULATES BALL WIDTH
 CTRLPF = $21
 ballheight = 4

mainloop
 drawscreen
 if c = 0 then goto title rem LOOPS BACK SO ALL THAT HAPPENS IS TITLE SCREEN
 if c = 1 then gosub game

 rem COLORING CHARACTERS BASED on WHAT LEVEL WE'RE IN
 if c = 101 then COLUP0 = 1 : COLUP1 = 39

 rem BUTTON PRESS
 if collision(player1, ball) then gosub buttonpress

 rem collision WITH WALLS, IN WHICH CHARACTERS IGNORE EACH OTHERS COLLISIONS
 if collision(player0, playfield) then gosub collision0
 if collision(player1, playfield) && !collision(player0,playfield) then gosub collision1

 rem RESET DIRECTION INDICATORS for next ITERATION
 a = 0 : d = 0 : s = 0 : w = 0

 rem MOVE CHARACTERS
 rem SPIDER
 if joy0left  then a = 1 : x = x - 1
 if joy0right then d = 1 : x = x + 1
 if joy0up    then w = 1 : y = y - 1
 if joy0down  then s = 1 : y = y + 1
 rem HUMAN
 if joy1left  then a = a + 2 : v = v - 1
 if joy1right then d = d + 2 : v = v + 1
 if joy1up    then w = w + 2 : z = z - 1
 if joy1down  then s = s + 2 : z = z + 1
 rem POSITION UPDATE
 player0x = x : player0y = y : player1x = v : player1y = z

 goto mainloop

collision0
 rem OPTIONS for ADSW ARE:
 rem 0 --> no collision
 rem 1 --> just spider collided
 rem 2 --> just human collided
 rem 3 --> both collided

 rem SPIDER COLLIDED, FIX then CHECK HUMAN
 if a = 1 || a = 3 then x = x + 1
 if d = 1 || d = 3 then x = x - 1
 if w = 1 || w = 3 then y = y + 1
 if s = 1 || s = 3 then y = y - 1
 player0x = x : player0y = y
 rem CHECK if HUMAN COLLIDED
 if collision(player1, playfield) then goto collision1
 return

collision1
 rem OPTIONS for ADSW ARE:
 rem 0 --> no collision
 rem 1 --> just spider collided
 rem 2 --> just human collided
 rem 3 --> both collided

 rem FIX HUMAN
 if a = 2 || a = 3 then v = v + 1
 if d = 2 || d = 3 then v = v - 1
 if w = 2 || w = 3 then z = z + 1
 if s = 2 || s = 3 then z = z - 1
 player1x = v : player1y = z
 return

buttonpress
 g = 1
 rem WALL to REMOVE WILL CORRESPOND to THE LEVEL WE ARE IN
 if c = 101 then pfpixel 31 7 off
 rem REMOVE BUTTON
 ballx = 0 : bally = 0
 return


 rem GAME STATES AND THEIR UPDATES to CONSTANTS/VARIABLES
title
 playfield:
  XX...XXXXXXXXXXXXXXXXXXXXXX...XX
  X..............................X
  ...XXX..XXX..XXX.XX...XXX.XX....
  ..X...X.X..X..X..X.X..X...X.X...
  ..X.....X..X..X..X..X.X...X..X..
  ...XXX..X..X..X..X..X.XX..X.X...
  ......X.XXX...X..X..X.X...XX....
  ..X...X.X.....X..X.X..X...X.X...
  ...XXX..X....XXX.XX...XXX.X..X..
  X..............................X
  XX...XXXXXXXXXXXXXXXXXXXXXX...XX
  ................................
end
 rem RESET EVERYTHING
 x = 0 : y = 0 : v = 254 : z = 254
 score = 0
 g = 0
 COLUP0 = 1 : COLUP1 = 39
 COLUPF = rand : COLUBK = 0
 rem PRESSING SPACEBAR GOES to LEVEL 1
 if joy0fire then c = 1
 goto mainloop

game
 playfield:
  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  X...........X.............XXXX.X
  X...........X..........XXXXXX..X
  X...........X..........XX......X
  X...........X..................X
  X...........X....XXXXXXXXXXXXXXX
  X...........X..................X
  X.....................X........X
  XXXXXXXXXX............X........X
  X.....................X........X
  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
end
 rem UPDATE C SO THAT WE DON't RUN THIS SUBROUTINE EVERY TIME
 c = 101
 rem PLACE THE BUTTON
 ballx = 24: bally = 77
 rem PLACE THE CHARACTERS
 x = 22 : y = 15
 v = 133 : z = 39
 rem COLOR THE background
 COLUPF = 4
 COLUBK = 8
 return



